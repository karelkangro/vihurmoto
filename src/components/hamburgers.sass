
@charset "UTF-8"
/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

// Settings
// ==================================================
$hamburger-padding-x           : 0
$hamburger-padding-y           : 0
$hamburger-layer-width         : 2rem
$hamburger-layer-height        : 4px
$hamburger-layer-spacing       : 6px
$hamburger-layer-color         : rgb(251,255,254)
$hamburger-layer-border-radius : 3px
$hamburger-hover-opacity       : 1
$hamburger-active-layer-color  : $hamburger-layer-color
$hamburger-active-hover-opacity: $hamburger-hover-opacity

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.
$hamburger-hover-use-filter   : false
$hamburger-hover-filter       : opacity(50%)
$hamburger-active-hover-filter: $hamburger-hover-filter

// Types (Remove or comment out what you donâ€™t need)
// ==================================================
$hamburger-types: ( vortex,)
// Base Hamburger (We need this)
// ==================================================
// Hamburger
// ==================================================
.hamburger
  padding: $hamburger-padding-y $hamburger-padding-x
  display: flex
  cursor: pointer

  transition-property: opacity, filter
  transition-duration: 0.15s
  transition-timing-function: linear

  // Normalize (<button>)
  font: inherit
  color: inherit
  text-transform: none
  background-color: rgb(222,26,26)
  border: 0
  margin: 0
  overflow: visible
  @media (min-width: 768px)
    display: none;

  &:hover
    @if $hamburger-hover-use-filter == true
      filter: $hamburger-hover-filter
    @else
      opacity: $hamburger-hover-opacity

  &.is-active
    &:hover
      @if $hamburger-hover-use-filter == true
        filter: $hamburger-active-hover-filter
      @else
        opacity: $hamburger-active-hover-opacity

    .hamburger-inner,
    .hamburger-inner::before,
    .hamburger-inner::after
      background-color: $hamburger-active-layer-color

.hamburger-box
  width: $hamburger-layer-width
  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2
  display: inline-block
  position: relative

.hamburger-inner
  display: block
  top: 50%
  margin-top: $hamburger-layer-height / -2

  &,
  &::before,
  &::after
    width: $hamburger-layer-width
    height: $hamburger-layer-height
    background-color: $hamburger-layer-color
    border-radius: $hamburger-layer-border-radius
    position: absolute
    transition-property: transform
    transition-duration: 0.15s
    transition-timing-function: ease

  &::before,
  &::after
    content: ""
    display: block

  &::before
    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1

  &::after
    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1

// Hamburger types
// ==================================================
// hamburger vortex
@if index($hamburger-types, vortex)

.hamburger--vortex
  .hamburger-inner
    transition-duration: 0.2s
    transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1)

    &::before,
    &::after
      transition-duration: 0s
      transition-delay: 0.1s
      transition-timing-function: linear

    &::before
      transition-property: top, opacity

    &::after
      transition-property: bottom, transform

  &.is-active
    .hamburger-inner
      transform: rotate(765deg)
      transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1)

      &::before,
      &::after
        transition-delay: 0s

      &::before
        top: 0
        opacity: 0


      &::after
        bottom: 0
        transform: rotate(90deg)